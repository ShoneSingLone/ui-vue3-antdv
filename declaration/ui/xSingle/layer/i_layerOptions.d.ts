export declare type t_anyStringString = [string, string];
export declare type t_subfix<TKey, TSubfix extends string> = TKey extends number ? `${TKey}${TSubfix}` : never;
export declare type t_offsetString = "auto" | "t" | "r" | "b" | "l" | "lt" | "lb" | "rt" | "rb";
export interface i_layerOptions {
    contentClass?: string;
    type?: number;
    title?: string | t_anyStringString | boolean;
    content?: string | HTMLElement | t_anyStringString;
    skin?: string;
    area?: string | t_anyStringString;
    offset?: t_subfix<number, "px"> | t_anyStringString | t_offsetString;
    icon?: number;
    btn?: string | t_anyStringString;
    btnAlign?: "l" | "c" | "r";
    closeBtn?: string | boolean;
    shade?: string | t_anyStringString | boolean;
    shadeClose?: boolean;
    during?: number;
    id?: string;
    anim?: -1 | 0 | 1 | 2 | 3 | 4 | 5 | 6;
    isOutAnim?: boolean;
    fullscreen?: boolean;
    maxmin?: boolean;
    fixed?: boolean;
    resize?: boolean;
    onResizing?: Function | false;
    scrollbar?: boolean;
    maxWidth?: number;
    maxHeight?: number;
    zIndex?: number;
    move?: string | HTMLElement | false;
    moveOut?: boolean;
    onMoveEnd?: Function | false;
    tips?: number | t_anyStringString;
    tipsMore?: boolean;
    success?: Function | false;
    yes?: Function | false;
    onClickClose?: Function | false;
    end?: Function | false;
    full?: Function | false;
    min?: Function | false;
    restore?: Function | false;
    minStack?: boolean;
}
