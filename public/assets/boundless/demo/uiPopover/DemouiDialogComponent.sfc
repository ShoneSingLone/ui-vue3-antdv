<template>
	<mkit md="## UI.dialog.component" />
	<xButton :configs="configs.btn.customBtn" />
</template>

<script>
async function sfc({ defineComponent, State_UI, UI }) {
	const { $t } = State_UI;

	return defineComponent({
		TEMPLATE_PLACEHOLDER,
		setup() {},
		data() {
			return {
				configs: {
					btn: {
						customBtn: {
							text: () => {
								return $t("自定义按钮").label;
							},
							async onClick() {
								UI.dialog.component({
									title: $t("DemoXFormWithForm").label,
									maxmin: true,
									component: defineComponent({
										props: ["propDialogOptions"],
										methods: {
											setBtn() {
												this.isShowCancel = this.count++ % 2 == 0;
											},
											close() {
												this.propDialogOptions.closeDialog();
											}
										},
										mounted() {
											this.propDialogOptions.onBeforeClose = () => {
												return this.isShowCancel;
											};
										},
										computed: {
											dialogInstance() {
												return this.propDialogOptions._contentInstance;
											},
											dialogDefautBtn() {
												return {
													onOk: this.propDialogOptions.closeDialog,
													onCancel: this.propDialogOptions.closeDialog,
													hideOk: !this.isShowCancel,
													hideCancel: this.isShowCancel,
													textOk: this.$t("只有确定可以关闭").label,
													textCancel: this.$t("动态添加了onBeforeClose属性").label
												};
											}
										},
										data() {
											return {
												count: 1,
												isShowCancel: true
											};
										},
										template: `<div class="padding20 flex1">
											<p>演示使用bundless的形式，使用template，不使用jsx</p>
											<ul>
												<li>作为弹出的组件，有prop字段propDialogOptions，本身是传入dialog的参数options</li>
												<li>经过实例化，添加了dialog jQuery 实例  _dialog$ele</li>
												<li>添加了component 实例 _contentInstance，和DOM id _dialog$ele</li>
												<li>propDialogOptions._dialog$ele.attr("id")=>当前DOM id {{propDialogOptions._dialog$ele.attr("id")}}</li>
												<li>this.propDialogOptions._contentInstance = this;</li>
												<li>this.propDialogOptions._dialog$ele = _dialog$ele; </li>
											</ul>
											<div class="flex">
												<xGap f="1" />
												<aButton @click="setBtn">改变按钮</aButton>
											</div>
										</div>
										<xDialogFooter :configs="dialogDefautBtn"/>`
									})
								});
							}
						}
					}
				}
			};
		},
		methods: {}
	});
}
</script>
