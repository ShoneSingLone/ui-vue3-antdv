<template>
	<mkit md="## v-uiPopover" />	
	<aTag v-uiPopover="configsUiPopoverNormal">添加v-uiPopover 指定content就行</aTag>
	<xGap t="10" />
	<aTag v-uiPopover="configsUiPopoverComponent">使用Vue组件</aTag>
	<xGap t="10" />
	<div v-uiPopover="{ onlyEllipsis: true }">
		<aTag>没有省略号，无tips</aTag>
	</div>
	<xGap t="10" />
	<!-- 原理就是，对比text排一行的宽度与实际宽度 -->
	<div
		v-uiPopover="{ onlyEllipsis: true }"
		class="ellipsis mb10"
		style="width: 300px">
		<aTag>内容太长,有ellipsis,鼠标放上来有tips</aTag>
		longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglong
	</div>
	<xGap t="10" />
	<aTag v-uiPopover="{ delay: 3000, content: '有些图标用不着每次都提醒' }">
		延迟3s再展示tips
	</aTag>
</template>

<script>
async function sfc({ defineComponent, State_UI, UI, markRaw }) {
	const { $t } = State_UI;
	const PopoverContent = defineComponent(
		markRaw({
			template: `<aCard type="primary"> aCard </aCard>`
		})
	);
	return defineComponent({
		TEMPLATE_PLACEHOLDER,
		setup() {},
		data() {
			return {
				configsUiPopoverNormal: {
					content: `v-uiPopover="{ content: $t('这是一个浮动tips').label }" `
				},
				configsUiPopoverComponent: {
					content: PopoverContent
				},
				configsBtn: {
					text: () => {
						return $t("一般").label;
					},
					async onClick() {
						UI.dialog.component({
							title: $t("DemoXFormWithForm").label,
							component: defineComponent({
								template: `<p>boundless Vue SFC 文件演示，使用template，不使用jsx</p>`
							}),
							maxmin: true,
							async onOk(instance) {
								const { close, payload } = instance;
								const { Methods } = payload;
								try {
									if (await Methods.verifyForm()) {
										const params = Methods.getParams();
										console.log(params);
										close();
									}
								} catch (e) {
									logError(e?.error?.msg);
								}
							}
						});
					}
				}
			};
		},
		methods: {}
	});
}
</script>
